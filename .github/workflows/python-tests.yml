name: Test suite

on:
  push:
  pull_request:
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  tests:
    name: ðŸ‘·
    runs-on: ${{ matrix.os }}
    strategy:
      # max-parallel: 5
      matrix:
        python-version:
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        os:
        - ubuntu-latest
        - ubuntu-16.04
        - macOS-latest
        # - windows-2019
        # - windows-2016
        env:
        - TOXENV: python

    env:
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Log Python version
      run: >-
        python --version
    - name: Log Python location
      run: >-
        which python
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('docs/requirements.txt') }}-${{ hashFiles('tests/requirements.txt') }}-${{ hashFiles('tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Upgrade pip/setuptools/wheel
      run: >-
        python
        -m pip install
        --disable-pip-version-check
        --upgrade
        pip setuptools wheel
    - name: Install tox
      run: >-
        python -m pip install --upgrade tox tox-venv
    - name: Log installed dists
      run: >-
        python -m pip freeze --all
    - name: Log env vars
      run: >-
        env
      env: ${{ matrix.env }}

    - name: Verify that there's no cached Python modules in sources
      if: >-
        ! startsWith(matrix.os, 'windows-')
      run: >-
        ! grep pyc setuptools.egg-info/SOURCES.txt

    - name: 'Initialize tox envs: ${{ matrix.env.TOXENV }}'
      run: |
        python -m tox --parallel auto --notest --skip-missing-interpreters false
      env: ${{ matrix.env }}
    - name: Test with tox
      run: |
        ${{ startsWith(matrix.os, 'windows-') && 'setx NETWORK_REQUIRED ' || 'export NETWORK_REQUIRED=' }}1
        python -m tox \
        --parallel 0 \
        -- \
        --cov
      env: ${{ matrix.env }}
